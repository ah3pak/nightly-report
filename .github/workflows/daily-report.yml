name: Daily Telegram Report

on:
  schedule:
    - cron: "30 17 * * *"   # هر روز ساعت 21:00 تهران (17:30 UTC)
  workflow_dispatch: {}

jobs:
  send:
    runs-on: ubuntu-latest

    steps:
      - name: Install deps
        run: |
          python3 -m pip install --upgrade pip
          pip install jdatetime requests

      - name: Build message (Jalali date + TGJU + Nobitex)
        id: build
        run: |
          python3 - <<'PY'
          import re, json, requests
          from datetime import datetime, timedelta
          import jdatetime

          # ---------- helpers
          def iran_now():
              return datetime.utcnow() + timedelta(hours=3, minutes=30)

          fa_map = str.maketrans("0123456789", "۰۱۲۳۴۵۶۷۸۹")
          def fa_num(s): return str(s).translate(fa_map)

          def commatize(n):
              if n is None: return "—"
              s = re.sub(r"[^\d.]", "", str(n))
              if s == "": return "—"
              i, _, d = s.partition(".")
              out = f"{int(i):,}"
              if d: out += "." + d
              return fa_num(out)

          def pct_text(p):
              if p is None: return "—"
              s = re.sub(r"[^\d\.\-]", "", str(p))
              if s == "": return "—"
              v = float(s)
              if v > 0: trend = "رشد"
              elif v < 0: trend = "افت"
              else: trend = "بدون تغییر"
              return f"{fa_num(f'{abs(v):.2f}')}٪ {trend}"

          # ---------- TGJU scraping (last_price, change_percent)
          def tgju_fetch(url):
              r = requests.get(url, headers={"User-Agent":"Mozilla/5.0"}, timeout=20)
              r.raise_for_status()
              h = r.text
              m_price = re.search(r'"last_price"\s*:\s*"?(?P<v>-?\d[\d,\.]*)', h)
              m_pct   = re.search(r'"change_percent"\s*:\s*"?(?P<v>-?\d[\d\.]*)', h)
              price = m_price.group("v") if m_price else None
              pct   = m_pct.group("v") if m_pct else None
              return price, pct

          TGJU = {
            "gold18": "https://www.tgju.org/profile/gold-18",
            "coin_emami": "https://www.tgju.org/profile/sekke",
            "coin_nim":   "https://www.tgju.org/profile/sekke-nim",
            "coin_rob":   "https://www.tgju.org/profile/sekke-rob",
            "coin_gerami":"https://www.tgju.org/profile/sekke-gerami",
            "usd": "https://www.tgju.org/profile/price_dollar_rl",
            "eur": "https://www.tgju.org/profile/price_eur",
            "aed": "https://www.tgju.org/profile/price_aed",
            "xauusd": "https://www.tgju.org/profile/ounce"
          }

          g18, g18p = tgju_fetch(TGJU["gold18"])
          emami, _  = tgju_fetch(TGJU["coin_emami"])
          nim,   _  = tgju_fetch(TGJU["coin_nim"])
          rob,   _  = tgju_fetch(TGJU["coin_rob"])
          gerami,_  = tgju_fetch(TGJU["coin_gerami"])
          usd, usdp = tgju_fetch(TGJU["usd"])
          eur, eurp = tgju_fetch(TGJU["eur"])
          aed, aedp = tgju_fetch(TGJU["aed"])
          xau, _    = tgju_fetch(TGJU["xauusd"])

          # ---------- Nobitex IRT (تومان)   (BTC/ETH/SOL/BNB/USDT)
          # آدرس عمومی وضعیت بازار برای چند نماد
          symbols = ["BTCIRT","ETHIRT","SOLIRT","BNBIRT","USDTIRT"]
          nb = requests.get(
              "https://api.nobitex.ir/market/stats",
              params={"symbol": ",".join(symbols)},
              timeout=20,
              headers={"User-Agent":"Mozilla/5.0"}
          ).json().get("statistics", {})

          def nobi_latest(sym):
              d = nb.get(sym, {})
              return d.get("latest")

          btc_irt = nobi_latest("BTCIRT")
          eth_irt = nobi_latest("ETHIRT")
          sol_irt = nobi_latest("SOLIRT")
          bnb_irt = nobi_latest("BNBIRT")
          usdt_irt= nobi_latest("USDTIRT")

          # ---------- Date (Jalali + Gregorian)
          now_g = iran_now()
          now_j = jdatetime.datetime.fromgregorian(datetime=now_g)
          weekdays = ["دوشنبه","سه‌شنبه","چهارشنبه","پنجشنبه","جمعه","شنبه","یکشنبه"]
          months_j = ["فروردین","اردیبهشت","خرداد","تیر","مرداد","شهریور",
                      "مهر","آبان","آذر","دی","بهمن","اسفند"]
          months_g = ["ژانویه","فوریه","مارس","آوریل","مه","ژوئن",
                      "ژوئیه","اوت","سپتامبر","اکتبر","نوامبر","دسامبر"]

          header = f"{weekdays[now_j.weekday()]} {fa_num(now_j.day)} {months_j[now_j.month-1]} {fa_num(now_j.year)} | {fa_num(now_g.day)} {months_g[now_g.month-1]} {fa_num(now_g.year)} – ساعت ۲۱:۰۰"

          # ---------- Build sections
          gold_line = f"طلای ۱۸ عیار امروز با {pct_text(g18p)} به {commatize(g18)} تومان رسید."
          coin_lines = "\n".join([
            f"🔹 سکه امامی: {commatize(emami)} تومان",
            f"🔹 نیم‌سکه: {commatize(nim)} تومان",
            f"🔹 ربع‌سکه: {commatize(rob)} تومان",
            f"🔹 سکه گرمی: {commatize(gerami)} تومان",
          ])

          fx_line = " | ".join([
            f"دلار: {commatize(usd)} تومان",
            f"یورو: {commatize(eur)} تومان",
            f"درهم: {commatize(aed)} تومان"
          ])

          crypto_lines = " | ".join([
            f"بیت‌کوین: {commatize(btc_irt)} تومان",
            f"اتریوم: {commatize(eth_irt)} تومان",
            f"سولانا: {commatize(sol_irt)} تومان",
            f"بایننس‌کوین: {commatize(bnb_irt)} تومان",
            f"تتر: {commatize(usdt_irt)} تومان",
          ])

          # ounce line (دلاری)
          ounce_line = f"اونس جهانی طلا: {commatize(xau)} دلار"

          msg = f"""📊 گزارش روز بازار طلا، ارز و رمزارزها
          {header}

          🟡 بازار طلا
          {gold_line}
          {coin_lines}

          💵 بازار ارز
          {fx_line}

          🪙 بازار رمزارزها
          {crypto_lines}

          ({fa_num(now_j.strftime('%Y/%m/%d'))} – ارسال خودکار GitHub Actions)
          """.strip()

          print("::set-output name=message::" + json.dumps(msg, ensure_ascii=False))
          PY

      - name: Send to Telegram
        run: |
          curl -sS -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\":\"${{ secrets.TELEGRAM_CHAT_ID }}\",\"text\":${{ steps.build.outputs.message }},\"parse_mode\":\"HTML\",\"disable_web_page_preview\":true}"
