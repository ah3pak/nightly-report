name: Daily Telegram Report

on:
  schedule:
    - cron: "30 17 * * *"  # هر روز 21:00 به وقت تهران
  workflow_dispatch:

jobs:
  send:
    runs-on: ubuntu-latest

    steps:
      - name: Install deps
        run: |
          sudo apt-get update
          pip install requests jdatetime

      - name: Build message (Jalali date + TGJU + Nobitex)
        id: build
        run: |
          python3 - <<'PY'
          import requests, jdatetime, datetime, json

          # --- تاریخ شمسی ---
          now_teh = datetime.datetime.utcnow() + datetime.timedelta(hours=3, minutes=30)
          j_now = jdatetime.datetime.fromgregorian(datetime=now_teh)
          weekday_map = ["دوشنبه","سه‌شنبه","چهارشنبه","پنج‌شنبه","جمعه","شنبه","یک‌شنبه"]
          weekday = weekday_map[j_now.weekday()]
          jalali_date = f"{weekday} {j_now.day} {j_now.j_months_fa[j_now.month-1]} {j_now.year}"
          greg_date = now_teh.strftime("%d %B %Y – ساعت %H:%M")

          # --- دریافت داده از TGJU ---
          tgju_items = {
              "طلای ۱۸ عیار": "geram18",
              "سکه امامی": "sekee",
              "نیم‌سکه": "sekne-nim",
              "ربع‌سکه": "sekne-rob",
              "دلار": "price_dollar_rl",
              "یورو": "price_eur"
          }

          tgju_data = {}
          for name, code in tgju_items.items():
              url = f"https://www.tgju.org/chart-summary/{code}"
              r = requests.get(url)
              r.raise_for_status()
              data = r.json()
              p = data['current']['p'] if 'current' in data else None
              try:
                  p = int(float(p.replace(',', '')))
              except:
                  pass
              tgju_data[name] = p

          # --- دریافت داده رمزارزها از نوبیتکس ---
          nobitex_symbols = {
              "BTC": "btc-usdt",
              "ETH": "eth-usdt",
              "SOL": "sol-usdt",
              "BNB": "bnb-usdt",
              "USDT": "usdt-rls"
          }

          nobi_prices = {}
          for sym, pair in nobitex_symbols.items():
              r = requests.get(f"https://api.nobitex.ir/market/stats?symbol={pair}")
              r.raise_for_status()
              data = r.json()['stats'][pair]
              nobi_prices[sym] = float(data['latest'])

          # تبدیل تتر به تومان
          t_usdt = nobi_prices['USDT']

          msg = f"""📊 گزارش روز بازار طلا، ارز و رمزارزها
🗓️ {jalali_date} | {greg_date}

🟡 بازار طلا
طلای ۱۸ عیار: {tgju_data['طلای ۱۸ عیار']:,} تومان
سکه امامی: {tgju_data['سکه امامی']:,} تومان
نیم‌سکه: {tgju_data['نیم‌سکه']:,} تومان
ربع‌سکه: {tgju_data['ربع‌سکه']:,} تومان

💵 بازار ارز
دلار: {tgju_data['دلار']:,} تومان | یورو: {tgju_data['یورو']:,} تومان

🪙 بازار رمزارزها (بر اساس نوبیتکس)
بیت‌کوین: {nobi_prices['BTC']:.0f} USDT ≈ {nobi_prices['BTC'] * t_usdt:,.0f} تومان
اتریوم: {nobi_prices['ETH']:.0f} USDT ≈ {nobi_prices['ETH'] * t_usdt:,.0f} تومان
سولانا: {nobi_prices['SOL']:.0f} USDT ≈ {nobi_prices['SOL'] * t_usdt:,.0f} تومان
بایننس‌کوین: {nobi_prices['BNB']:.0f} USDT ≈ {nobi_prices['BNB'] * t_usdt:,.0f} تومان
تتر: {t_usdt:,.0f} تومان

(ارسال خودکار GitHub Actions – {now_teh.strftime("%Y/%m/%d - %H:%M")} Tehran)
"""

          print(msg)
          with open("msg.txt", "w", encoding="utf-8") as f:
              f.write(msg)
          print("✅ Message built successfully")

          # خروجی برای اکشن بعدی
          msg_json = json.dumps(msg, ensure_ascii=False)
          print(f"::set-output name=message::{msg_json}")
          PY

      - name: Send to Telegram
        run: |
          curl -sS -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\":\"${{ secrets.TELEGRAM_CHAT_ID }}\",\"text\":${{ steps.build.outputs.message }},\"parse_mode\":\"HTML\",\"disable_web_page_preview\":true}"
